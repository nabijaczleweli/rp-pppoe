From 8070578d66d7f583ca2a463104950345d1ad185e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=BD=D0=B0=D0=B1?= <nabijaczleweli@nabijaczleweli.xyz>
Date: Sun, 20 Dec 2020 15:51:33 +0100
Subject: [PATCH 3/3] Add rp_pppoe_padi_{timeout,attempts} to override default
 timeout and max attempt number
X-Mutt-PGP: OS

Based on pppd commit 8e77984ac5d7acbe68b2b2f590abd17564c9730d
("rp-pppoe plugin: Add options to tune discovery timeout and number of
  attempts") by Alexis Cellier
---
 doc/KERNEL-MODE-PPPOE | 4 ++++
 src/discovery.c       | 4 ++--
 src/plugin.c          | 9 ++++++++-
 src/pppoe.h           | 1 +
 4 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/doc/KERNEL-MODE-PPPOE b/doc/KERNEL-MODE-PPPOE
index 9f16c48..3cc189c 100644
--- a/doc/KERNEL-MODE-PPPOE
+++ b/doc/KERNEL-MODE-PPPOE
@@ -96,6 +96,10 @@ rp_pppoe_mac aa:bb:cc:dd:ee:ff -- only accept PADOs from specified MAC address
 rp_pppoe_host_uniq 01aabbccdd  -- Use decoded hex-string 01aabbccdd as host-uniq
                                 value instead of stringified PID
 
+rp_pppoe_padi_timeout  5       -- Specify initial timeout for discovery packets
+                                in seconds
+rp_pppoe_padi_attempts 3       -- Specify number of discovery attempts
+
 The kernel-mode PPPoE plugin permits an MTU of up to 1500 on the PPP
 interface providing that the MTU on the underlying Ethernet interface
 is at least 1508.  In /etc/ppp/pppoe.conf, set MTU=1500 and MRU=1500 to
diff --git a/src/discovery.c b/src/discovery.c
index d917aba..e9a941b 100644
--- a/src/discovery.c
+++ b/src/discovery.c
@@ -743,7 +743,7 @@ discovery(PPPoEConnection *conn)
     padiAttempts = 0;
     do {
 	padiAttempts++;
-	if (padiAttempts > MAX_PADI_ATTEMPTS) {
+	if (padiAttempts > conn->discoveryAttempts) {
 	    printErr("Timeout waiting for PADO packets");
 	    if (persist) {
 		padiAttempts = 0;
@@ -776,7 +776,7 @@ discovery(PPPoEConnection *conn)
     padrAttempts = 0;
     do {
 	padrAttempts++;
-	if (padrAttempts > MAX_PADI_ATTEMPTS) {
+	if (padrAttempts > conn->discoveryAttempts) {
 	    printErr("Timeout waiting for PADS packets");
 	    if (persist) {
 		padrAttempts = 0;
diff --git a/src/plugin.c b/src/plugin.c
index 9779370..5eee64c 100644
--- a/src/plugin.c
+++ b/src/plugin.c
@@ -76,6 +76,8 @@ static char *acName = NULL;
 static char *existingSession = NULL;
 static int printACNames = 0;
 static char *host_uniq = NULL;
+static int pppoe_padi_timeout = PADI_TIMEOUT;
+static int pppoe_padi_attempts = MAX_PADI_ATTEMPTS;
 
 static int PPPoEDevnameHook(char *cmd, char **argv, int doit);
 static option_t Options[] = {
@@ -95,6 +97,10 @@ static option_t Options[] = {
       "Only connect to specified MAC address" },
     { "rp_pppoe_host_uniq", o_string, &host_uniq,
       "Set Host-Uniq to the supplied hex string" },
+    { "rp_pppoe_padi_timeout", o_int, &pppoe_padi_timeout,
+      "Initial timeout for discovery packets in seconds" },
+    { "rp_pppoe_padi_attempts", o_int, &pppoe_padi_attempts,
+      "Number of discovery attempts" },
     { NULL }
 };
 
@@ -132,7 +138,8 @@ PPPOEInitDevice(void)
     conn->discoverySocket = -1;
     conn->sessionSocket = -1;
     conn->printACNames = printACNames;
-    conn->discoveryTimeout = PADI_TIMEOUT;
+    conn->discoveryTimeout = pppoe_padi_timeout;
+    conn->discoveryAttempts = pppoe_padi_attempts;
     return 1;
 }
 
diff --git a/src/pppoe.h b/src/pppoe.h
index fe29245..6227277 100644
--- a/src/pppoe.h
+++ b/src/pppoe.h
@@ -289,6 +289,7 @@ typedef struct PPPoEConnectionStruct {
     PPPoETag relayId;		/* Ditto */
     int PADSHadError;           /* If PADS had an error tag */
     int discoveryTimeout;       /* Timeout for discovery packets */
+    int discoveryAttempts;      /* Max times to attempt discovery */
 #ifdef PLUGIN
     int seenMaxPayload;
     int mtu;
-- 
2.20.1

